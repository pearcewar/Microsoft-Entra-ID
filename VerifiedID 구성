개요
Verified ID(확인된 ID)란?
개인이 자신의 디지털 ID를 제어할 수 있는 분산형 ID 솔루션을 만들어 중앙 집중식 기관이나 중개자에 의존하지 않고 ID 데이터를 관리하는 안전하고 비공개적인 방법으로써 
간단히 말하면, 확인 가능한 자격 증명은 주체에 대한 정보를 입증하는 발급자가 만든 클레임으로 구성된 데이터 개체입니다. 이러한 클레임은 스키마로 식별되며 DID 발급자와 주체를 포함합니다. 발급자의 DID는 이런 정보를 입증한다는 증거로 디지털 서명을 만듭니다.

DID(Decentralized ID)란?
DID를 이해하려면 먼저 현재 ID 시스템과 비교하는 것이 좋습니다. 전자 메일 주소와 소셜 네트워크 ID는 협업용으로 사용자에게 친숙한 별칭이지만, 협업을 능가하는 많은 시나리오에서 데이터 액세스를 위한 제어 지점 역할을 하기에는 이제 지나치게 부담스럽습니다. 이러한 ID에 대한 액세스는 언제든지 제거될 수 있으므로 잠재적인 문제가 발생합니다.

DID(탈중앙화 ID)는 다릅니다. DID는 탈중앙화 트러스트 시스템에 뿌리를 둔 사용자 생성 자체 소유의 전역 고유 식별자입니다. 여기에는 불변성 보장 강화, 검열 저항, 변조 어려움과 같은 독특한 특징이 있습니다. 이러한 특성은 자체 소유권 및 사용자 제어를 제공하려는 ID 시스템에 매우 중요합니다.

Microsoft의 확인 가능한 자격 증명 솔루션은 신뢰 당사자(검증자) 자신이 확인 가능한 자격 증명의 소유자임을 증명하는 정보를 입증한다는 증거로 DID(탈중앙화 자격 증명)를 사용하여 암호화 방식으로 서명합니다. Microsoft 제품을 기반으로 확인 가능한 자격 증명 솔루션을 만드는 사용자는 기본적으로 DID를 이해해야 합니다.

2023년 12월 1일 did:ion이 Verified ID의 트러스트 앵커(trust anchor) 역할이 종료되었으며, 현재 공식적으로 지원되는 유일한 방법은 did:web입니다. 
이전에 did:ion을 사용하는 테넌트는 did:ion 권한을 사용하여 Verified Credential을 발급하거나 확인할 수 없습니다. 이 경우 기존 did:ion 권한에서 did:web 권한으로 마이그레이션을 수행해야 합니다. 
이 가이드는 Verified ID 서비스를 배포하고, 발급(Issuing)과 확인(Verifying)을 위한 자격 증명을 만들고, 발급 및 확인 역할을 할 샘플 웹을 호스팅할 Windows Server를 구성하는 방법에 대해 설명합니다. 
 
DID Document에 대한 풀이(resolve)를 위해 DID는 일반적으로 신뢰 시스템을 나타내는 일종의 기본 네트워크에 기록되며 Microsoft는 두 가지 트러스트 시스템을 지원합니다. 
	• did:web : 웹 도메인의 기존 평판을 사용하여 트러스트를 허용하는 권한 기반 모델입니다. 조직의 DID Document는 고객이 공개적으로 액세스할 수 있는 웹 서버에 did.json 파일을 만드는 즉시 사용할 수 있도록 등록됩니다. 웹 서버에서 did-configuration.json 파일을 업데이트하여 DID에 대한 변경 사항을 공개할 수 있습니다. 이 트러스트 유형의 도메인 URL은 변경할 수 없습니다. 등록이 완료되면 Microsoft의 DID Resolver 또는 DIF Universal Resolver ( https://dev.uniresolver.io/)의 DID DOCUMENT 탭에서 DID를 쿼리하여 DID Document를 풀이할 수 있습니다. 
	• did:ion : ION (Identity Overlay Network)은 순수 결정론적 Sidetree 프로토콜( https://github.com/decentralized-identity/sidetree)을 기반으로 하는 레이어 2의 개방형 무허가 네트워크로, 특별한 토큰, 신뢰할 수 있는 검증자, 합의(consensus) 메커니즘이 필요하지 않습니다. ION은 대규모로 DID/DPKI를 지원하기 위해 비트코인 위에 블록체인에 구애받지 않는 Sidetree 프로토콜을 구현하는 네트워크입니다. ION은 조직의 퍼블릭 DID Document를 비트코인 원장에 앵커(anchor)하는 효율적인 방법을 제공하며 Sidetree 프로토콜은 원장에 기록하기 전에 트랜잭션을 일괄처리합니다. DID Document는 원장에 앵커되어 공개적으로 사용할 수 있습니다. 
 
DID의 값은 긴 형식의 DID입니다. DID에서 세 번째 콜론 이전의 모든 내용이 DID 식별자이며, 세 번째 콜론 이후의 모든 내용은 DID Document 메타데이터입니다. 

트러스트 시스템을 변경하는 유일한 방법은 Verifiable ID를 선택 해제하고 온보딩을 다시 실행하는 것입니다. 


